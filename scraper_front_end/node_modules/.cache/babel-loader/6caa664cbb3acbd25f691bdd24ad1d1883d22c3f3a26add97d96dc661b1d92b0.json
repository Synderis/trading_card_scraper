{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan\\\\trading_card_scraper\\\\trading_card_scraper_front_end\\\\src\\\\Components\\\\DynamicRows.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Define the Row type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicRows = () => {\n  _s();\n  // Initialize the state with 10 rows\n  const [rows, setRows] = useState(Array(10).fill({\n    cardName: '',\n    cardId: '',\n    cardOptions: []\n  }));\n  const navigate = useNavigate();\n  const handleChange = (index, field, value) => {\n    const newRows = [...rows];\n    newRows[index] = {\n      ...newRows[index],\n      [field]: value\n    };\n    setRows(newRows);\n  };\n  const handleCheckboxChange = (index, option) => {\n    const newRows = [...rows];\n    const currentOptions = newRows[index].cardOptions;\n    if (currentOptions.includes(option)) {\n      newRows[index].cardOptions = currentOptions.filter(opt => opt !== option);\n    } else {\n      newRows[index].cardOptions = [...currentOptions, option];\n    }\n    setRows(newRows);\n  };\n  const handleAddRow = () => {\n    setRows([...rows, {\n      cardName: '',\n      cardId: '',\n      cardOptions: []\n    }]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(rows)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit rows');\n      }\n\n      // Navigate to results page after successful submission\n      navigate('/results');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Rows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Card Name\",\n          value: row.cardName,\n          onChange: e => handleChange(index, 'cardName', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Card ID\",\n          value: row.cardId,\n          onChange: e => handleChange(index, 'cardId', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: row.cardOptions.includes('holo'),\n              onChange: () => handleCheckboxChange(index, 'holo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), \"Holo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: row.cardOptions.includes('reverse holo'),\n              onChange: () => handleCheckboxChange(index, 'reverse holo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), \"Reverse Holo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: row.cardOptions.includes('first edition'),\n              onChange: () => handleCheckboxChange(index, 'first edition')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), \"First Edition\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddRow,\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicRows, \"chEVfRMVQdkSaZMS2NXkegF3xaQ=\", false, function () {\n  return [useNavigate];\n});\n_c = DynamicRows;\nexport default DynamicRows;\nvar _c;\n$RefreshReg$(_c, \"DynamicRows\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DynamicRows","_s","rows","setRows","Array","fill","cardName","cardId","cardOptions","navigate","handleChange","index","field","value","newRows","handleCheckboxChange","option","currentOptions","includes","filter","opt","handleAddRow","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","row","type","placeholder","onChange","target","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dylan/trading_card_scraper/trading_card_scraper_front_end/src/Components/DynamicRows.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Define the Row type\r\ntype Row = {\r\n  cardName: string;\r\n  cardId: string;\r\n  cardOptions: string[];\r\n};\r\n\r\nconst DynamicRows: React.FC = () => {\r\n  // Initialize the state with 10 rows\r\n  const [rows, setRows] = useState<Row[]>(Array(10).fill({ cardName: '', cardId: '', cardOptions: [] }));\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (index: number, field: keyof Row, value: string) => {\r\n    const newRows = [...rows];\r\n    newRows[index] = { ...newRows[index], [field]: value };\r\n    setRows(newRows);\r\n  };\r\n\r\n  const handleCheckboxChange = (index: number, option: string) => {\r\n    const newRows = [...rows];\r\n    const currentOptions = newRows[index].cardOptions;\r\n\r\n    if (currentOptions.includes(option)) {\r\n      newRows[index].cardOptions = currentOptions.filter(opt => opt !== option);\r\n    } else {\r\n      newRows[index].cardOptions = [...currentOptions, option];\r\n    }\r\n\r\n    setRows(newRows);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    setRows([...rows, { cardName: '', cardId: '', cardOptions: [] }]);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:8000/submit', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(rows),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to submit rows');\r\n      }\r\n\r\n      // Navigate to results page after successful submission\r\n      navigate('/results');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dynamic Rows</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {rows.map((row, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Card Name\"\r\n              value={row.cardName}\r\n              onChange={(e) => handleChange(index, 'cardName', e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Card ID\"\r\n              value={row.cardId}\r\n              onChange={(e) => handleChange(index, 'cardId', e.target.value)}\r\n            />\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={row.cardOptions.includes('holo')}\r\n                  onChange={() => handleCheckboxChange(index, 'holo')}\r\n                />\r\n                Holo\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={row.cardOptions.includes('reverse holo')}\r\n                  onChange={() => handleCheckboxChange(index, 'reverse holo')}\r\n                />\r\n                Reverse Holo\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={row.cardOptions.includes('first edition')}\r\n                  onChange={() => handleCheckboxChange(index, 'first edition')}\r\n                />\r\n                First Edition\r\n              </label>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleAddRow}>Add Row</button>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicRows;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}