{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan\\\\trading_card_scraper\\\\scraper_front_end\\\\src\\\\Components\\\\DarkMode.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkMode = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n    localStorage.setItem('darkMode', darkMode.toString());\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setDarkMode(!darkMode),\n    children: darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(DarkMode, \"WTNiQdfCelyJf6HuAQb+GyS51Ko=\");\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DarkMode","_s","darkMode","setDarkMode","localStorage","getItem","document","documentElement","classList","add","remove","setItem","toString","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dylan/trading_card_scraper/scraper_front_end/src/Components/DarkMode.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DarkMode: React.FC = () => {\r\n    const [darkMode, setDarkMode] = useState(() => {\r\n        return localStorage.getItem('darkMode') === 'true';\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (darkMode) {\r\n            document.documentElement.classList.add('dark-mode');\r\n        } else {\r\n            document.documentElement.classList.remove('dark-mode');\r\n        }\r\n        localStorage.setItem('darkMode', darkMode.toString());\r\n    }, [darkMode]);\r\n\r\n    return (\r\n        <button onClick={() => setDarkMode(!darkMode)}>\r\n            {darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DarkMode;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,MAAM;IAC3C,OAAOQ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;EACtD,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM;IACZ,IAAIK,QAAQ,EAAE;MACVI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IACvD,CAAC,MAAM;MACHH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC1D;IACAN,YAAY,CAACO,OAAO,CAAC,UAAU,EAAET,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC;EACzD,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAQc,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,CAACD,QAAQ,CAAE;IAAAY,QAAA,EACzCZ,QAAQ,GAAG,sBAAsB,GAAG;EAAqB;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEjB,CAAC;AAACjB,EAAA,CAnBID,QAAkB;AAAAmB,EAAA,GAAlBnB,QAAkB;AAqBxB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}