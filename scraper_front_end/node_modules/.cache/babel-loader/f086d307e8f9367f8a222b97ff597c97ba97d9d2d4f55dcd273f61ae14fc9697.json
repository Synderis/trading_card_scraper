{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan\\\\trading_card_scraper\\\\scraper_front_end\\\\src\\\\Components\\\\CardTotals.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardTotals = () => {\n  _s();\n  const [cardTotals, setCardTotals] = useState(null); // Replace `any` with the actual type if known\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCardTotals = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/card-totals'); // Adjust endpoint as necessary\n        if (!response.ok) {\n          throw new Error('Failed to fetch card totals');\n        }\n        const data = await response.json();\n        setCardTotals(data.card_totals); // Adjust based on your actual response structure\n      } catch (err) {\n        setError((err === null || err === void 0 ? void 0 : err.message) || 'An unknown error occurred');\n        console.error('Error fetching results:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCardTotals();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Totals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), cardTotals ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(cardTotals).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [key, \": \", value === null || value === void 0 ? void 0 : value.toString()]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No card totals available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CardTotals, \"v+nr3GfGERlS8ZvpXTIeHc7RrZQ=\");\n_c = CardTotals;\nexport default CardTotals;\nvar _c;\n$RefreshReg$(_c, \"CardTotals\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CardTotals","_s","cardTotals","setCardTotals","loading","setLoading","error","setError","fetchCardTotals","response","fetch","ok","Error","data","json","card_totals","err","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","entries","map","key","value","toString","_c","$RefreshReg$"],"sources":["C:/Users/Dylan/trading_card_scraper/scraper_front_end/src/Components/CardTotals.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CardTotals: React.FC = () => {\r\n  const [cardTotals, setCardTotals] = useState<any>(null); // Replace `any` with the actual type if known\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCardTotals = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/card-totals'); // Adjust endpoint as necessary\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch card totals');\r\n        }\r\n        const data = await response.json();\r\n        setCardTotals(data.card_totals); // Adjust based on your actual response structure\r\n      } catch (err) {\r\n        setError((err as Error)?.message || 'An unknown error occurred');\r\n        console.error('Error fetching results:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCardTotals();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Card Totals</h1>\r\n      {cardTotals ? (\r\n        <ul>\r\n          {Object.entries(cardTotals).map(([key, value]) => (\r\n            <li key={key}>\r\n              {key}: {value?.toString()}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <div>No card totals available.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardTotals;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAM,IAAI,CAAC,CAAC,CAAC;EACzD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,aAAa,CAACU,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZT,QAAQ,CAAC,CAACS,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAYC,OAAO,KAAI,2BAA2B,CAAC;QAChEC,OAAO,CAACZ,KAAK,CAAC,yBAAyB,EAAEU,GAAG,CAAC;MAC/C,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIjB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAoB,QAAA,GAAK,SAAO,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBrB,UAAU,gBACTH,OAAA;MAAAoB,QAAA,EACGM,MAAM,CAACC,OAAO,CAACxB,UAAU,CAAC,CAACyB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBAC3C9B,OAAA;QAAAoB,QAAA,GACGS,GAAG,EAAC,IAAE,EAACC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,QAAQ,CAAC,CAAC;MAAA,GADlBF,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELxB,OAAA;MAAAoB,QAAA,EAAK;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjDID,UAAoB;AAAA+B,EAAA,GAApB/B,UAAoB;AAmD1B,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}