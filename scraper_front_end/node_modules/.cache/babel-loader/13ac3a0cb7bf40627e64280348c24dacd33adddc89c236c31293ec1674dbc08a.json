{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dylan\\\\trading_card_scraper\\\\trading_card_scraper_front_end\\\\src\\\\Components\\\\ResultsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../CSS Sheets/ResultsPage.css\"; // Adjust the path as necessary\n\n// Define an interface for the expected structure of results\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsPage = () => {\n  _s();\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/results\");\n        console.log(\"Fetched results:\", response.data.results); // Log the results for debugging\n        setResults(response.data.results);\n      } catch (error) {\n        console.error(\"Error fetching results:\", error);\n      }\n    };\n    fetchResults();\n  }, []);\n  if (!results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Get column headers\n  const columnHeaders = Object.keys(results);\n  const firstColumnValues = Object.values(results)[0];\n  if (!firstColumnValues || firstColumnValues.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this); // Handle the case of no data\n  }\n  const numRows = firstColumnValues.length;\n\n  // Function to convert data to CSV format\n  const downloadCSV = () => {\n    const csvRows = [];\n\n    // Add header row\n    csvRows.push(columnHeaders.join(\",\"));\n\n    // Add data rows\n    for (let i = 0; i < numRows; i++) {\n      const row = columnHeaders.map(header => results[header][i]).join(\",\");\n      csvRows.push(row);\n    }\n\n    // Create a Blob from the CSV data and create a link to download it\n    const csvString = csvRows.join(\"\\n\");\n    const blob = new Blob([csvString], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"results.csv\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadCSV,\n      className: \"download-button\",\n      children: \"Download CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"results-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columnHeaders.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from({\n          length: numRows\n        }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columnHeaders.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-cell\",\n            children: [results[header][rowIndex], \" \"]\n          }, header, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultsPage, \"N7B/+eHsLT/dzJhUTI5eoU5ZVqM=\");\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ResultsPage","_s","results","setResults","fetchResults","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","columnHeaders","Object","keys","firstColumnValues","values","length","numRows","downloadCSV","csvRows","push","join","i","row","map","header","csvString","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","className","onClick","Array","from","_","rowIndex","_c","$RefreshReg$"],"sources":["C:/Users/Dylan/trading_card_scraper/trading_card_scraper_front_end/src/Components/ResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../CSS Sheets/ResultsPage.css\"; // Adjust the path as necessary\r\n\r\n// Define an interface for the expected structure of results\r\ninterface Results {\r\n    card: string[];\r\n    id: string[];\r\n    Ungraded: string[];\r\n    \"Grade 1\": string[];\r\n    \"Grade 2\": string[];\r\n    \"Grade 3\": string[];\r\n    \"Grade 4\": string[];\r\n    \"Grade 5\": string[];\r\n    \"Grade 6\": string[];\r\n    \"Grade 7\": string[];\r\n    \"Grade 8\": string[];\r\n    \"Grade 9\": string[];\r\n    \"Grade 9.5\": string[];\r\n    \"SGC 10\": string[];\r\n    \"CGC 10\": string[];\r\n    \"PSA 10\": string[];\r\n    \"BGS 10\": string[];\r\n    \"BGS 10 Black\": string[];\r\n    \"CGC 10 Pristine\": string[];\r\n    final_link: string[];\r\n}\r\n\r\nconst ResultsPage: React.FC = () => {\r\n    const [results, setResults] = useState<Results | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchResults = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8000/results\");\r\n                console.log(\"Fetched results:\", response.data.results); // Log the results for debugging\r\n                setResults(response.data.results);\r\n            } catch (error) {\r\n                console.error(\"Error fetching results:\", error);\r\n            }\r\n        };\r\n\r\n        fetchResults();\r\n    }, []);\r\n\r\n    if (!results) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // Get column headers\r\n    const columnHeaders = Object.keys(results) as (keyof Results)[];\r\n    const firstColumnValues = Object.values(results)[0];\r\n\r\n    if (!firstColumnValues || firstColumnValues.length === 0) {\r\n        return <div>No results found</div>; // Handle the case of no data\r\n    }\r\n\r\n    const numRows = firstColumnValues.length;\r\n\r\n    // Function to convert data to CSV format\r\n    const downloadCSV = () => {\r\n        const csvRows: string[] = [];\r\n\r\n        // Add header row\r\n        csvRows.push(columnHeaders.join(\",\"));\r\n\r\n        // Add data rows\r\n        for (let i = 0; i < numRows; i++) {\r\n            const row = columnHeaders.map(header => results[header][i]).join(\",\");\r\n            csvRows.push(row);\r\n        }\r\n\r\n        // Create a Blob from the CSV data and create a link to download it\r\n        const csvString = csvRows.join(\"\\n\");\r\n        const blob = new Blob([csvString], { type: \"text/csv\" });\r\n        const url = URL.createObjectURL(blob);\r\n        \r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"results.csv\";\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    };\r\n\r\n    return (\r\n        <div className=\"results-container\">\r\n            <h1>Results</h1>\r\n            <button onClick={downloadCSV} className=\"download-button\">Download CSV</button>\r\n            <table className=\"results-table\">\r\n                <thead>\r\n                    <tr>\r\n                        {columnHeaders.map((header) => (\r\n                            <th key={header}>{header}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.from({ length: numRows }, (_, rowIndex) => (\r\n                        <tr key={rowIndex}>\r\n                            {columnHeaders.map((header) => (\r\n                                <td key={header} className=\"table-cell\">\r\n                                    {results[header][rowIndex]} {/* Use the type assertion here */}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}